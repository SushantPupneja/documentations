{
    "openapi": "3.0.1",
    "info": {
        "title": "Edine Automation API's",
        "description": "apis to power edine automation application",
        "version": "1.0.0"
    },

    "servers": [
        {
            "url": "https://edinemenu.deviotsolution.ooredoo.qa/service/{service_name}/api/{version}",
            "variables": {
                "service_name": {
                    "default": "iot"
                },
                "version": {
                    "default": "v1"
                }
            },
            "description": "iot instance url"
        }
    ],

    "paths": {
        "platform/modules": {
            "post": {
                "tags": ["Manage Modules", "Platform API's"],
                "summary": "Modules to be subscribed by the accounts",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/module"
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/module"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Manage Modules", "Platform API's"],
                "summary": "get modules from the platform",
                "description": "",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type":"object",
                                        "$ref":"#/components/schemas/module"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/devices": {
            "post": {
                "tags": ["Manage Devices"],
                "summary": "create new device in platform",
                "description": "",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/device"
                            }
                        }
                    }
                },
                "responses": {
                        "200": {
                            "description": "Success",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/device"
                                    }
                                }
                            }
                        }
                    }
                
            },
            "get":{
                "description":"Get all registered devices in the platform",
                "summary":"",
                "tags":["Manage Devices"],
                "responses":{
                    "200":{
                        "description":"success",
                        "content":{
                            "application/json":{
                                "type":"Array",
                                "schema":{
                                    "$ref":"#/components/schemas/device"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/devices/{deviceId}/status": {
            "patch":{
                "tags":["Manage Devices"],
                "summary":"",
                "description":"",
                "parameters":[{
                    "in": "path",
                    "name": "deviceId",
                    "schema":{
                        "type":"integer"
                    },
                    "required": true
                }],
                "requestBody":{
                    "content":{
                        "application/json":{
                            "schema":{
                                "properties":{
                                    "status": {
                                        "description":"ACTIVE/INACTIVE",
                                        "type":"string",
                                        "example": "ACTIVE"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses":{
                    "200":{
                        "description": "Success"
                    }
                }
            }
        },
        "/accounts/{accountId}/devices/templates": {
            "post": {
                "tags": ["Manage Device Templates"],
                "description": "",
                "parameters": [],
                "summary": "add templates for devices",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema":{
                                "$ref": "#/components/schemas/template"
                            }
                        }
                    }
                },
                "responses":{
                    "200":{
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/template"
                                }
                            }
                        },
                        "description":"Success"
                    }
                }
            },
            "get":{
                "description":"",
                "summary":"",
                "tags": ["Manage Device Templates"],
                "parameters":[
                    {
                        "in": "path",
                        "name": "id",
                        "schema":{
                            "type": "integer"
                        },
                        "description": ""
                    }
                ],
                "responses":{
                    "200":{
                        "content":{
                            "application/json":{
                                "schema":{
                                    "type": "Array",
                                    "$ref":"#/components/schemas/template"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/devices/templates/{templateId}": {
            "get": {
                "description":"",
                "tags": ["Manage Device Templates"],
                "parameters":[{
                    "in": "path",
                    "name": "templateId",
                    "schema":{
                        "type":"integer"
                    },
                    "required": true
                }],
                "summary": "",
                "responses": {
                    "200": {
                        "description": "success",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/template"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/devices/types": {
            "post": {
                "description": "",
                "summary": "",
                "tags": ["Manage Device Types"],
                "parameters": [],
                "requestBody": {
                    "content":{
                        "application/json":{
                            "schema":{
                                "$ref":"#/components/schemas/device-types"
                            }
                        }
                    }
                },
                "responses":{
                    "200":{
                        "description":"Success",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/device-types"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "",
                "summary": "",
                "tags": ["Manage Device Types"],
                "responses":{
                    "200":{
                        "description":"success",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/device-types"
                                }
                            }
                        }
                    }
                }
            }
        },
        "accounts/{accountId}/assets": {
            "post": {
                "summary": "",
                "description": "",
                "tags": ["Manage Assets"],
                "requestBody": {
                    "content": {
                        "application/json":{
                            "schema": {
                                "$ref": "#/components/schemas/asset"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/schemas/asset"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "list of assets for an account",
                "description": "",
                "tags": ["Manage Assets"],
                "responses":{
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "$ref": "#/components/schemas/asset"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "accounts/{accountId}/assets/{assetId}": {
            "get": {
                "summary": "get asset of an account by ID",
                "description": "",
                "tags":["Manage Assets"],
                "responses":{
                    "200": {
                        "description": "success",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/asset"
                                }
                            }
                        }
                    }
                }
            }
        },
        "platform/assets/types": {
            "post":{
                "summary": "add platform managed/supported asset types",
                "description": "",
                "tags": ["Manage Asset-Types", "Platform API's"],
                "requestBody": {
                    "content": {
                        "application/json":{
                            "schema": {
                                "$ref":"#/components/schemas/assetType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/assetType"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Manage Asset-Types", "Platform API's"],
                "summary": "get all supported asset-types",
                "description": "",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "$ref":"#/components/schemas/assetType"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "platform/assets/types/{assetTypeId}": {
            "get": {
                "tags":["Manage Asset-Types", "Platform API's"],
                "summary": "get asset-types by id",
                "description": "",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/assetType"
                                }
                            }
                        }
                    }
                }
            }
        },
        "accounts": {
            "post": {
                "summary": "add a new account while setting up a new tenant",
                "description": "register account for the tenant",
                "tags": ["Manage Accounts"],
                "requestBody":{
                    "content":{
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/account"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/account"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "get account setup for the tenant",
                "description": "account info",
                "tags": ["Manage Accounts"],
                "responses":{
                    "200":{
                        "description": "success",
                        "content":{
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/account"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "no account registered for the tenant, setup a new account"
                    }
                }

            }
        },
        "accounts/{accountId}/assets/{assetId}/childDevices": {
            "post": {
                "summary": "add a device child to an asset",
                "description": "link a device to an asset",
                "tags": ["Manage Asset-Device Linkage"],
                "requestBody":{
                    "content":{
                        "application/json":{
                            "schema": {
                                "type":"object",
                                "properties": {
                                    "deviceId": {
                                        "type": "integer",
                                        "description": "platform id of the device",
                                        "example": 3445
                                    }
                                }
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "description": "success",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "accounts/{accountId}/assets/{assetId}/childDevices/{deviceId}":{
            "delete": {
                "summary": "un-link device from an asset",
                "description": "remove device as part of the asset",
                "tags": ["Manage Asset-Device Linkage"],
                "responses": {
                    "200": {
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/response"
                                }
                            }
                        },
                        "description": "success"
                    }
                }
            }
        },
        "accounts/{accountId}/restaurants/restaurants": {
            "post": {
                "tags": ["Restaurant-Module API's"],
                "summary": "managed subscribed restaurant module",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/restaurant"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/restaurant"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Restaurant-Module API's"],
                "summary": "get all restaurants registered with the account",
                "description": "",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "$ref": "#/components/schemas/restaurant"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "accounts/{accountId}/restaurants/restaurants/{restaurantId}/stores": {
            "post": {
                "tags": ["Restaurant-Module API's"],
                "summary": "post a new store/branch in the platform",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/store"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/store"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Restaurant-Module API's"],
                "summary": "get all stores registered under restaurant",
                "description": "",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "$ref": "#/components/schemas/store"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "accounts/{accountId}/restaurants/restaurants/{restaurantId}/stores/{storeId}/floors": {
            "post": {
                "tags": ["Restaurant-Module API's"],
                "summary": "register floors under store",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/floor"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/floor"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Restaurant-Module API's"],
                "summary": "get all registered floors under a store",
                "description": "",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "$ref":"#/components/schemas/floor"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "accounts/{accountId}/live-view":{
            "get": {
                "tags": ["Manage Live-View"],
                "summary": "get live view response from the service",
                "description": "",
                "parameters":[
                    {
                        "in": "query",
                        "name": "storeId",
                        "schema": {
                            "type":"integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "floorId",
                        "schema": {
                            "type":"integer"
                        }
                    }
                ],
                "responses":{
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/live-view"
                                }
                            }
                        }
                    }
                }
            }
        },
        "accounts/{accountId}/hierarchy":{
            "get":{
                "tags":["Manage Hierarchy"],
                "description": "",
                "summary": "get hierarchy for the account",
                "responses":{
                    "200":{
                        "description": "success",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/schemas/hierarchy"
                                }
                            }
                        }
                    }
                }
            }
        },
        "accounts/{accountId}/alarms": {
            "get": {
                "tags": ["Manage Alarms"],
                "description": "",
                "summary": "get account related alarms",
                "responses": {
                    "200": {
                        "description": "success",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/dashboardAlarms"
                                }
                            }
                        }
                    }
                }
            }
        }
    },

    "components": {
        "schemas": {
            "coldChainFragment": {
                "type": "object",
                "properties": {
                    "ed_ConditionState": {
                        "type": "object",
                        "properties": {
                            "temperature": {
                                "type": "object",
                                "properties": {
                                    "value": {
                                        "type":"integer",
                                        "description": "value of the temperature reading",
                                        "example": 45
                                    },
                                    "unit": {
                                        "type": "string",
                                        "description": "unit of measure for the value",
                                        "example": "C"
                                    }
                                }
                            },
                            "humidity": {
                                "type": "object",
                                "properties": {
                                    "value": {
                                        "type":"integer",
                                        "description": "value of the humidity reading",
                                        "example": 89
                                    },
                                    "unit": {
                                        "type": "string",
                                        "description": "unit of measure for the value",
                                        "example": "%"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "wasteFragment": {
                "type": "object",
                "properties": {
                    "ed_FillingState": {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "integer",
                                "description": "filling percentage",
                                "example": 78
                            },
                            "unit": {
                                "type": "string",
                                "description": "unit of measure for the value",
                                "example": "%"
                            }
                        }
                    }
                }
            },
            "occupencyFragment": {
                "type": "object",
                "properties":{
                    "ed_OccupancyState": {
                        "type": "object",
                        "properties": {
                            "occupency": {
                                "type": "integer",
                                "description": "status of occupency 1/0",
                                "example": 0
                            },
                            "vacant": {
                                "type": "integer",
                                "description": "status of vaccancy 1/0",
                                "example": 1
                            }
                        }
                    }
                }
            },
            "deviceMeta": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "name of the device",
                        "example": "SN19087773"
                    },
                    "id": {
                        "type": "object",
                        "$ref": "#/components/schemas/id"
                    }
                }
            },
            "assetMeta": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "object",
                        "$ref": "#/components/schemas/id"
                    },
                    "name":{
                        "type": "string",
                        "description": "name of the asset",
                        "example": "Table-124"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the asset",
                        "example": "ED_OCCUPENCY"
                    },
                    "isLinked": {
                        "type": "boolean",
                        "description": "status of asset linkage with device",
                        "example": "true/false"
                    }
                }
            },
            "liveViewMeta": {
                "type": "object",
                "description": "it can be any of one value from A,B or C",
                "properties": {
                    "A": {
                        "type": "object",
                        "$ref": "#/components/schemas/occupencyFragment"
                    },
                    "B": {
                        "type": "object",
                        "$ref": "#/components/schemas/wasteFragment"
                    },
                    "C": {
                        "type": "object",
                        "$ref": "#/components/schemas/coldChainFragment"
                    }
                }
            },
            "live-view": {
                "type": "array",
                "description": "live - view object schema",
                "items": {
                    "type":"object",
                    "properties":{
                        "assetMeta":{
                            "type": "object",
                            "$ref": "#/components/schemas/assetMeta"
                        },
                        "deviceMeta": {
                            "type": "object",
                            "$ref": "#/components/schemas/deviceMeta"
                        },
                        "lastUpdated": {
                            "type": "string",
                            "description": "timestamp related to last updated object timestamp",
                            "example": "2021-04-22T14:52:35.169+03:00"
                        },
                        "liveViewMeta": {
                            "type": "object",
                            "$ref": "#/components/schemas/liveViewMeta"
                        }
                    }
                }
            },
            "store": {
                "type": "object",
                "description": "store object properties",
                "properties": {
                    "id": {
                        "type": "object",
                        "$ref": "#/components/schemas/id"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the store",
                        "example": "KFC-Old Airport Branch"
                    },
                    "email": {
                        "type": "string",
                        "description": "email address for the account",
                        "example": "info@jubliant.com"
                    },
                    "mobile": {
                        "type": "string",
                        "description": "contact for the account",
                        "example": "(+91)-89762-98700"
                    },
                    "address": {
                        "type": "string",
                        "description": "address for the account",
                        "example": "A-66 Kings Avenue Park Drive NY USA 150098"
                    }
                }
            },
            "restaurant": {
                "type": "object",
                "description": "",
                "properties":{
                    "id": {
                        "type":"object",
                        "$ref": "#/components/schemas/id"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the restaurant",
                        "example": "KFC-Al-Matar-Al-Qadeem"
                    },
                    "email": {
                        "type": "string",
                        "description": "email address for the account",
                        "example": "info@jubliant.com"
                    },
                    "mobile": {
                        "type": "string",
                        "description": "contact for the account",
                        "example": "(+91)-89762-98700"
                    },
                    "address": {
                        "type": "string",
                        "description": "address for the account",
                        "example": "A-66 Kings Avenue Park Drive NY USA 150098"
                    }
                }
            },
            "template": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer",
                        "desciption": "id of the registered template",
                        "example": 10
                    },
                    "name": {
                        "type": "string",
                        "desciption": "name correspond template",
                        "example": "SmartMeter_2.0"
                    },
                    "model": {
                        "type": "string",
                        "desciption": "model correspond device",
                        "example": "E650"
                    },
                    "device_type_id": {
                        "type": "integer",
                        "desciption": "device type ",
                        "example": 10
                    },
                    "c8y_Software": {
                        "type": "object",
                        "description": "override cumulocity fragment object for software specifications of the device like version etc",
                        "example": "{'version':2.0.0.1}"
                    },
                    "c8y_Hardware": {
                        "type": "object",
                        "description": "override cumulocity fragment object for software specifications of the device like version etc",
                        "example": "{'model':103455, 'serailNumber': '', 'revision': ''}"
                    },
                    "c8y_SuppportedOperations": {
                        "type": "array",
                        "description": "override cumulocity fragment object for list of operations supported by the device.",
                        "example": "['c8y_Restart']"
                    }
                }
            },
            "organization": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string",
                        "desciption": "",
                        "example": ""
                    },
                    "name": {
                        "type": "string",
                        "desciption": "",
                        "example": ""
                    },
                    "email": {
                        "type": "string",
                        "desciption": "",
                        "example": ""
                    },
                    "contact_person": {
                        "type": "string",
                        "desciption": "",
                        "example": ""
                    },
                    "address": {
                        "type": "string",
                        "desciption": "",
                        "example": ""
                    }
                }
            },
            "credentials": {
                "type": "object",
                "description": "",
                "properties": {
                    "tenant": {
                        "type": "string",
                        "desciption": "",
                        "example": ""
                    },
                    "username": {
                        "type": "",
                        "descritption": "",
                        "example": ""
                    },
                    "password": {
                        "type": "",
                        "descritption": "",
                        "example": ""
                    },
                    "clone_id": {
                        "type": "",
                        "descritption": "",
                        "example": ""
                    }
                }
            },
            "device": {
                "type": "object",
                "description": "",
                "properties": {
                    "name":{
                        "type": "string",
                        "description": "",
                        "example": "string"
                    },
                    "templateId": {
                        "type": "integer",
                        "description": "",
                        "example": 1
                    },
                    "deviceType": {
                        "type": "object",
                        "$ref": "#/components/schemas/device-types"
                    },
                    "requiredInterval": {
                        "type": "integer",
                        "description": "data interval time in min(s)",
                        "example": 10
                    }
                }
            },
            "device-types": {
                "type": "object",
                "description": "",
                "properties": {
                    "title": {
                        "desciption": "ed_TableOccupencySensor",
                        "type": "string",
                        "example": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "",
                        "example": "string"
                    }
                }
            },
            "response": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object"
                    },
                    "message": {
                        "type": "string",
                        "description": "message of the response",
                        "example": "success"
                    },
                    "error": {
                        "type": "object"
                    }
                }
            },
            "id": {
                "type":"integer",
                "description": "platform generated ID of the object",
                "example": 6445
            },
            "module": {
                "type": "object",
                "description": "modules available for accounts to be subscribed",
                "properties": {
                    "id": {
                        "type": "object",
                        "$ref": "#/components/schemas/id"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the module",
                        "example": "Restaruant/Hotel/Office"
                    },
                    "eval": {
                        "type": "string",
                        "description": "value of the module",
                        "example": "ED_RESTAURANT"
                    }
                }
            },
            "floor": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "object",
                        "$ref": "#/components/schemas/id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Floor",
                        "example": "Floor-8"
                    },
                    "description": {
                        "type": "string",
                        "description": "add more information about floors like open roof, basement, outdoor, indoor",
                        "example": "outdoor"
                    }
                }
            },
            "assetType": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "object",
                        "$ref": "#/components/schemas/id"
                    },
                    "name":{
                        "type": "string",
                        "description": "Name of the asset type",
                        "example": "Waste-Bin"
                    },
                    "eval": {
                        "type": "string",
                        "description": "type of an asset",
                        "example": "ED_FREEZER"
                    },
                    "description": {
                        "type": "string",
                        "description": "more information about asset type",
                        "example": "Waste Sensors by Dingtek"
                    }
                }
            },
            "asset": {
                "type": "object",
                "description": "asset for an account can be bin/freezer/table/seat",
                "properties": {
                    "id": {
                        "type": "object",
                        "$ref": "#/components/schemas/id"
                    },
                    "assetType": {
                        "type": "object",
                        "$ref":"#/components/schemas/assetType"
                    },
                    "floorId": {
                        "type": "object",
                        "$ref":"#/components/schemas/floor"
                    },
                    "name": {
                        "type": "string",
                        "description": "required name of the asset",
                        "example": "Freezer-FZL10879M"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of asset to be added, madatory for backend logic",
                        "example": "bin/freezer/table/seat"
                    },
                    "installation": {
                        "type": "object",
                        "properties": {
                            "area": {
                                "type": "string",
                                "description": "the floor area where asset is placed",
                                "example": "kitchen"
                            }
                        }
                    }
                }
            },
            "account": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "object",
                        "$ref": "#/components/schemas/id"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "tenantId/tenant Name of the setup account",
                        "example": "edinemenu"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the account",
                        "example": "Jubliant Foods Pvt. Ltd"
                    },
                    "alias": {
                        "type": "string",
                        "description": "short name for the account to be known, field will be used as owner for assets and devices",
                        "example": "jubliant"
                    },
                    "module": {
                        "type": "object",
                        "$ref":"#/components/schemas/module"
                    },
                    "email": {
                        "type": "string",
                        "description": "email address for the account",
                        "example": "info@jubliant.com"
                    },
                    "mobile": {
                        "type": "string",
                        "description": "contact for the account",
                        "example": "(+91)-89762-98700"
                    },
                    "address": {
                        "type": "string",
                        "description": "address for the account",
                        "example": "A-66 Kings Avenue Park Drive NY USA 150098"
                    }
                }
            },
            "hierarchy":{
                "type": "object",
                "description": "account hierarchy object",
                "properties": {
                    "restaurants": {
                        "type":"array",
                        "items":{
                            "type": "object",
                            "properties": {
                                "obj": {
                                    "type":"object",
                                    "$ref":"#/components/schemas/restaurant"
                                },
                                "stores": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties":{
                                            "obj": {
                                                "type": "object",
                                                "$ref": "#/components/schemas/store"
                                            },
                                            "floors": {
                                                "type": "array",
                                                "items":{
                                                    "type": "object",
                                                    "$ref":"#/components/schemas/floor"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "alarm": {
                "type": "object",
                "properties":{
                    "id": {
                        "type": "object",
                        "$ref": "#/components/schemas/id"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of alarm",
                        "example": "c8y_UnavialabilityAlarm"
                    },
                    "severity": {
                        "type": "string",
                        "description": "severity of the alarm",
                        "example": "CRITICAL"
                    },
                    "status": {
                        "type": "string",
                        "description": "state of the alarm",
                        "example": "ACTIVE/ACKNOWLEDGED"
                    },
                    "creationTime": {
                        "type": "string",
                        "description": "time stamp for alarm creation",
                        "example": "2021-04-22T15:26:45.406+04:00"
                    },
                    "source": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "object",
                                "$ref": "#/components/schemas/id"
                            },
                            "name": {
                                "type": "string",
                                "description": "name of the alarm creation entity",
                                "example": "Table-12"
                            }
                        }
                    }
                }
            },
            "dashboardAlarms": {
                "type": "object",
                "properties": {
                    "TOTAL": {
                        "type": "integer",
                        "description": "total active alarm count",
                        "example": 40
                    },
                    "MINOR": {
                        "type": "integer",
                        "description": "minor active alarm count",
                        "example": 10
                    },
                    "MAJOR": {
                        "type": "integer",
                        "description": "major active alarm count",
                        "example": 10
                    },
                    "WARNING": {
                        "type": "integer",
                        "description": "warning active alarm count",
                        "example": 10
                    },
                    "CRITICAL": {
                        "type": "integer",
                        "description": "critical active alarm count",
                        "example": 10
                    },
                    "alarms": {
                        "type": "array",
                        "description": "array of alarm object",
                        "items": {
                            "type": "object",
                            "$ref": "#/components/schemas/alarm"
                        }
                    }
                }
            }
        }
    },

    "tags": [
        {
            "name": "Manage Assets",
            "description": "API's to manage assests for an account"
        },
        {
            "name": "Manage Asset-Types",
            "description": "API's to manage assest types for an platform"
        },
        {
            "name": "Platform API's",
            "description": "API's to manage platform"
        },
        {
            "name": "Manage Accounts",
            "description": "API's to setup and manage account related information"
        },
        {
            "name": "Manage Asset-Device Linkage",
            "description": "API's to manage asset device linkages"
        },
        {
            "name": "Restaurant-Module API's",
            "description": "API's to manage Restaurant Module for an account"
        },
        {
            "name": "Manage Devices",
            "description": "operations"
        },
        {
            "name": "Manage Device Templates",
            "description": "operations"
        },
        {
            "name": "Manage Device Types",
            "description": "operations"
        },
        {
            "description": "modules to be subscribed by the account",
            "name": "Manage Modules"
        },
        {
            "name": "Manage Live-View",
            "description": "manage live view section of dashboard"
        },
        {
            "name": "Manage Analytics",
            "description": "Manage Analytics section of the dashboard"
        },
        {
            "name": "Manage Alarms",
            "description": "manage alarms section of the dashboard"
        },
        {
            "name": "Manage Hierarchy",
            "description": "get hierarchy of the account"
        }
    ]
}